# -*- coding: utf-8 -*-
"""318team.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/19qQl2jG2RhDrQ0YTKSPj7I-BzFTChxLa
"""

# Commented out IPython magic to ensure Python compatibility.
from sklearn.cluster import KMeans
import numpy as np 
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
# %matplotlib inline

url = 'https://raw.githubusercontent.com/nxdxnz/dataset/main/fixedata.csv'
result = pd.read_csv(url)

question = list(result)
question.remove('id')
question1 = list(question)
question1.remove('age')
result['total skor jawaban'] = result[question1].sum(axis=1)

result['rank'] = result['total skor jawaban'].rank(ascending=False)
result.sort_values("rank", inplace = True)

"""Distribusi"""

plt.rcParams['figure.figsize'] = (5, 4)
sns.countplot(result['q1'], palette = 'magma')
plt.title('Distribusi Jawaban 1', fontsize = 20)
plt.show()

plt.rcParams['figure.figsize'] = (5, 4)
sns.countplot(result['q2'], palette = 'magma')
plt.title('Distribusi Jawaban 2', fontsize = 20)
plt.show()

plt.rcParams['figure.figsize'] = (5, 4)
sns.countplot(result['q3'], palette = 'magma')
plt.title('Distribusi Jawaban 3', fontsize = 20)
plt.show()

plt.rcParams['figure.figsize'] = (5, 4)
sns.countplot(result['q4'], palette = 'magma')
plt.title('Distribusi Jawaban 4', fontsize = 20)
plt.show()

plt.rcParams['figure.figsize'] = (5, 4)
sns.countplot(result['q5'], palette = 'magma')
plt.title('Distribusi Jawaban 5', fontsize = 20)
plt.show()

plt.rcParams['figure.figsize'] = (5, 4)
sns.countplot(result['q6'], palette = 'magma')
plt.title('Distribusi Jawaban 6', fontsize = 20)
plt.show()

plt.rcParams['figure.figsize'] = (5, 4)
sns.countplot(result['q7'], palette = 'magma')
plt.title('Distribusi Jawaban 7', fontsize = 20)
plt.show()

plt.rcParams['figure.figsize'] = (5, 4)
sns.countplot(result['age'], palette = 'crest')
plt.title('Distribusi umur', fontsize = 20)
plt.show()

result1 = result[['total skor jawaban', 'age']]
x = result1.iloc[:, [0, 1]].values

km = KMeans(n_clusters = 3, init = 'k-means++', max_iter = 300, n_init = 10, random_state = 0)
y_means = km.fit_predict(x)

plt.scatter(x[y_means == 0, 0], x[y_means == 0, 1], s = 100, c = 'red', label = 'Kategori I')
plt.scatter(x[y_means == 1, 0], x[y_means == 1, 1], s = 100, c = 'blue', label = 'Kategori II')
plt.scatter(x[y_means == 2, 0], x[y_means == 2, 1], s = 100, c = 'black', label = 'Kategori III')

plt.style.use('default')
plt.title('Kategori Usia', fontsize = 20)
plt.xlabel('Total Skor')
plt.ylabel('Umur')
plt.legend()
plt.grid()
plt.show()